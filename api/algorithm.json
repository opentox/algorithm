{
    "swagger": "2.0",
    "info": {
        "version": "5.0.0pre1",
        "title": "OpenTox Algorithm service",
        "description": "An OpenTox REST Webservice. <br >Provides access to OpenTox algorithms.",
        "contact": {
            "name": "Christoph Helma, in silico toxicology",
            "url": "http://www.in-silico.ch",
            "email": "support@in-silico.ch"
        },
        "license": {
            "name": "GNU GENERAL PUBLIC LICENSE",
            "url": "https://github.com/opentox/algorithm/blob/master/LICENSE"
        }
    },
    "host": "enm.in-silico.ch",
    "schemes": [
        "https"
    ],
    "paths": {
        "/algorithm": {
            "head": {
                "tags": [
                    "algorithm"
                ],
                "description": "for service check",
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "get": {
                "tags": [
                    "algorithm"
                ],
                "description": "Get a list of all available algorithm",
                "produces": [
                    "text/uri-list"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/algorithm/lazar": {
            "get": {
                "tags": [
                    "algorithm"
                ],
                "description": "representation of lazar algorithm",
                "parameters": [
                    {
                        "$ref": "#/parameters/subjectid"
                    },
                    {
                        "name": "accept",
                        "in": "header",
                        "description": "requested Content-type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "text/plain",
                            "application/rdf+xml",
                            "text/turtle",
                            "text/html"
                        ]
                    }
                ],
                "produces": [
                    "text/plain",
                    "application/rdf+xml",
                    "text/turtle",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/200"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            },
            "post": {
                "tags": [
                    "algorithm"
                ],
                "description": "Create a lazar prediction model",
                "parameters": [
                    {
                        "$ref": "#/parameters/subjectid"
                    },
                    {
                        "$ref": "#/parameters/dataset_uri"
                    },
                    {
                        "$ref": "#/parameters/prediction_feature"
                    },
                    {
                        "$ref": "#/parameters/feature_generation_uri"
                    }
                ],
                "produces": [
                    "text/uri-list"
                ],
                "responses": {
                    "202": {
                        "$ref": "#/responses/202"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        },
        "/algorithm/lazar/predict": {
            "post": {
                "tags": [
                    "algorithm"
                ],
                "description": "Make a lazar prediction - <strong>not to be called directly!</strong>",
                "parameters": [
                    {
                        "name": "compound_uri",
                        "description": "URI of compound to be predicted",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "training_dataset_uri",
                        "description": "URI of training dataset",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "prediction_feature_uri",
                        "description": "URI of prediction feature",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "feature_dataset_uri",
                        "description": "URI of feature dataset",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "feature_calculation_algorithm",
                        "description": "Name of feature calculation algorithm",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "min_sim",
                        "description": "Numericvalue for minimum similarity",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "prediction_algorithm",
                        "description": "Name of prediction algorithm",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "propositionalized",
                        "description": "Whether propositionalization should be used",
                        "required": true,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "pc_type",
                        "description": "Physico-chemical descriptor type",
                        "required": false,
                        "in": "header",
                        "type": "string"
                    },
                    {
                        "name": "pc_lib",
                        "description": "Physico-chemical descriptor library",
                        "required": false,
                        "in": "header",
                        "type": "string"
                    }
                ],
                "produces": [
                    "text/uri-list"
                ],
                "responses": {
                    "202": {
                        "$ref": "#/responses/202"
                    },
                    "400": {
                        "$ref": "#/responses/400"
                    },
                    "401": {
                        "$ref": "#/responses/401"
                    },
                    "404": {
                        "$ref": "#/responses/404"
                    }
                }
            }
        }
    },
    "parameters": {
        "subjectid": {
            "name": "subjectid",
            "in": "header",
            "description": "authorization token, required if A&A active",
            "required": false,
            "type": "string"
        },
        "dataset_uri": {
            "name": "dataset_uri",
            "description": "Training dataset URI",
            "in": "header",
            "required": true,
            "type": "string"
        },
        "prediction_feature": {
            "name": "prediction_feature",
            "description": "URI of the feature to be predicted",
            "in": "header",
            "required": false,
            "type": "string"
        },
        "feature_generation_uri": {
            "name": "feature_generation_uri",
            "description": "URI of the feature generation algorithm",
            "in": "header",
            "required": false,
            "type": "string"
        }
    },
    "responses": {
        "200": {
            "description": "OK"
        },
        "202": {
            "description": "Accepted",
            "examples": {
                "text/uri-list": "\"https://enm.in-silico.ch/task/\""
            }
        },
        "400": {
            "description": "Bad Request"
        },
        "401": {
            "description": "Unauthorized"
        },
        "404": {
            "description": "Resource Not Found"
        }
    },
    "tags": [
        {
            "name": "algorithm",
            "description": "Algorithm service"
        }
    ]
}